# -*- coding: utf-8 -*-
"""Medical Insurance Cost Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1McIE5XQTiQEfe2A0vfWT2e1VgQA7Akg0

import dependencies
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

#loading datadset to pandas data ferame
insurance_dataset = pd.read_csv('/content/insurance.csv')

insurance_dataset.head()

insurance_dataset.tail()

insurance_dataset.shape

#getting information about dataset
insurance_dataset.info( )

#checking number of null values
insurance_dataset.isnull().sum()

#statistical meadsures of dataset
insurance_dataset.describe()

#distribution of age values
sns.set()
plt.figure(figsize=(6,6))
sns.distplot(insurance_dataset['age'])

#gender column
plt.figure(figsize=(6,6))
sns.countplot(x='sex', data=insurance_dataset)
plt.title('sex distribution')
plt.show()

#values of gender column
insurance_dataset['sex'].value_counts()

#bmi distribution
plt.figure(figsize=(6,6))
sns.distplot(insurance_dataset['bmi'])
plt.title('BMI Distribution')
plt.show()

#values of

#children column
plt.figure(figsize=(6,6))
sns.countplot(x='children', data=insurance_dataset)
plt.title('Children')
plt.show()

#smoker column
plt.figure(figsize=(6,6))
sns.countplot(x='smoker', data=insurance_dataset)
plt.title('Smoker')
plt.show()

#values of smoker column
insurance_dataset['smoker'].value_counts()

#region column
plt.figure(figsize=(6,6))
sns.countplot(x='region', data=insurance_dataset)
plt.title('Region')
plt.show()

#values of region column
insurance_dataset['region'].value_counts()

#distribution of Charges values
plt.figure(figsize=(6,6))
sns.distplot(insurance_dataset['charges'])
plt.title('Chargef Distributions')
plt.show()

"""Sex, Smoke, Region is catagorical value

Its need to convert neumerical value for model bettter anderstanding

Encodint the catagorical data

```
# This is formatted as code
```


"""

#encoding sex column
insurance_dataset.replace({'sex':{'male':0, 'female':1}}, inplace=True)

#encoding smoker column
insurance_dataset.replace({'smoker':{'no':0, 'yes':1}}, inplace=True)

#encoding ragion column
insurance_dataset.replace({'region':{'southeast':0, 'southwest':1, 'northeast':3, 'northwest':4}}, inplace=True)

print(insurance_dataset)

"""Splitting the target feature"""

x = insurance_dataset.drop(columns='charges', axis=1)
y = insurance_dataset['charges']

print(x)

print(y)

"""Splittint data into train test data"""

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=5)

print(x.shape, x_train.shape, x_test.shape)

"""Model Train

Linear Regression
"""

#loadint linear regrssion model
regression = LinearRegression()

regression.fit(x_train, y_train)

#Porediction on training data
training_data_prediction = regression.predict(x_train)

# R spuare value
r2_train = metrics.r2_score(y_train, training_data_prediction)
print('R squre vale: ', r2_train)

#Porediction on training data
testing_data_prediction = regression.predict(x_test)

# R spuare value
r2_test = metrics.r2_score(y_test, testing_data_prediction)
print('R squre vale: ', r2_test)

"""Prediction system"""

input_data = (31,1,25.74,0,1,0)

# changing input_data to a numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the array
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = regression.predict(input_data_reshaped)
print(prediction)

print('The insurance cost is USD ', prediction[0])

